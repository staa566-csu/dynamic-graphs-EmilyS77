---
title: "STAA 566 Dynamic Graphs"
author: "EmilyStarer"
format: html
editor: visual
---

## Ingest Data Source

The data source is marketing media data comparing different campaign types grouped by placement. Performance KPIs are measured through Sales, Spend and ROAS. ROAS is defined as Return on Ad Spend. The Data is reported on a monthly cadence.

```{r}
#read in data
library(readr)
mediadata <- read.csv("MediaData.csv")
head(mediadata,10)

```

```{r}
#install packages 
library(knitr)
library(tidyverse)
library(ggpubr)
library("tidyverse")
library("dplyr")
library("ggplot2")
library(MASS)
library(plotly)
library(htmlwidgets)
library(ggthemes)
```

## Graph

The graph shows sales compared to ROAS with the campaign type as color. The graph is showing the efficiency of the media (y axis) compared to the volume of sales (x-axis). Trend lines and smoothed lines are added to visualize the trend. The graph is trying to show how the different campaign types compared around efficiency and effectiveness.

```{r}
#make ggplot
media_plot <- ggplot(data=mediadata,
                     mapping=aes(x=Sales,
                                 y=ROAS,
                                 color=Campaign)) + 
              geom_point(aes(size=Spend),
                                  alpha=.5,
                                  shape=16) +
              geom_smooth(method="loess")
                     
#scale axis
media_plot <- media_plot + scale_y_continuous(breaks = seq(0,60,by=10))


media_plot <- media_plot + scale_x_continuous(breaks = seq(0,7500,by=1000))

#adjust legends
media_plot <- media_plot + guides(size=guide_legend(title="Amount Spent"),
                    color=guide_legend(title="Campaign Type"))

#add title
media_plot <- media_plot + labs(title="Sales Performance by Campaign Type",
                                subtitle=strwrap(paste0("Campaigns based on targeting criteria and placement. Return on Ad Spend calculated as Sales / Media Spend.")))
```

## Dynamic Features Added

A click selector and range toggle were added. The highlight click selector utilizes the legend to remove campaigns types from the visual. This easily allows comparison of 2 or 3 of the campaign types. This also allows dynamic ability for only 1 of the campaign types to be visible at a time. The range toggle allows users to zoom in on the graph. This is helpful when selecting a campaign type that is very concentrated in one area. The user can adjust the zoom then select only one of the campaign types and easily see the trend. This function is required when campaign types are on opposite ends of the scale.

```{r}
#convert to plotly
p_media_plot <- ggplotly(media_plot)

#adjust tooltip
p_media_plot <- ggplotly(p_media_plot, tooltip = "Campaign")

#add highlight on Campaign Type and click functionality from the legend  
p_media_plot <- highlight_key(p_media_plot, ~Campaign)

#Add Stretch of Time to be able to focus in on smaller sales windows 
p_media_plot <- p_media_plot %>% layout(
      title=NA,
      xaxis = list(
    rangeselector = list(
      buttons = list(
        list(
          count = 3,
          label = "3 mo",
          step = "month",
          stepmode = "backward"),
        list(
          count = 6,
          label = "6 mo",
          step = "month",
          stepmode = "backward"),
        list(
          count = 1,
          label = "1 yr",
          step = "year",
          stepmode = "backward"),
        list(
          count = 1,
          label = "YTD",
          step = "year",
          stepmode = "todate"),
        list(step = "all"))),
  rangeslider = list(type = "date")))
```

## Save Figure as pdf

```{r}
pdf("Media Data.pdf", height=10, width=10)
print(p_media_plot)
dev.off()
```

## Display Figure in HTML

```{r}
p_media_plot
```
